@page "/edit"

@using System.ComponentModel.DataAnnotations
@using Microsoft.EntityFrameworkCore
@using Threllaut.Data.Contexts

@inject IDbContextFactory<ApplicationDbContext> Factory

<PageTitle>Edit board</PageTitle>

@if(board is not null)
{
    <MudText Typo="Typo.h4">Editing board '@board.Name'</MudText>

    <MudForm @bind-IsValid="_success" ValidationDelay="50">
        <MudTextField T="string" Label="Name" Required RequiredError="Name is required."
            Validation="@(new MaxLengthAttribute(50) { ErrorMessage = "The name is too long" })" 
            @bind-Value=board.Name />
        <MudTextField T="string" Label="Description" @bind-Value=board.Description />
    </MudForm>

    <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!_success)" OnClick=SaveBoardAsync>Save</MudButton>
}

@code {
    private Data.Board board = default!;
    private bool _success;

    [SupplyParameterFromQuery]
    public Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await using var context = await Factory.CreateDbContextAsync();
        board = await context.Boards.AsSingleQuery().AsNoTracking()
            .Include(b => b.Columns)
            .SingleAsync(b => b.Id == Id);
    }

    private async Task SaveBoardAsync()
    {
        await using var context = await Factory.CreateDbContextAsync();
        context.Boards.Attach(board);
        context.Boards.Entry(board).State = EntityState.Modified;
        await context.SaveChangesAsync();
    }

}
